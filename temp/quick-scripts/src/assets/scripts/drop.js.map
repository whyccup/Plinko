{"version":3,"sources":["assets/scripts/drop.js"],"names":["cc","Class","Component","properties","dropArea","Node","dropSlot","_oldPos","start","node","position","onEnable","on","EventType","TOUCH_MOVE","_onTouchMove","TOUCH_END","_onTouchEnd","onDisable","off","touchEvent","location","getLocation","parent","convertToNodeSpaceAR","_withinTarget","length","inSlot","thisTargetNode","targetNode","rect","getBoundingBox","point","contains"],"mappings":";;;;;;;;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEJ,EAAE,CAACK,IADL;AAERC,IAAAA,QAAQ,EAAE,CAACN,EAAE,CAACK,IAAJ,CAFF;AAGRE,IAAAA,OAAO,EAAE,IAHD,CAGM;;AAHN,GAHP;AASL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,KAnBK,mBAmBG;AACJ,SAAKD,OAAL,GAAe,KAAKE,IAAL,CAAUC,QAAzB;AACH,GArBI;AAuBLC,EAAAA,QAvBK,sBAuBM;AACP,SAAKF,IAAL,CAAUG,EAAV,CAAaZ,EAAE,CAACK,IAAH,CAAQQ,SAAR,CAAkBC,UAA/B,EAA2C,KAAKC,YAAhD,EAA8D,IAA9D;AACA,SAAKN,IAAL,CAAUG,EAAV,CAAaZ,EAAE,CAACK,IAAH,CAAQQ,SAAR,CAAkBG,SAA/B,EAA0C,KAAKC,WAA/C,EAA4D,IAA5D;AACH,GA1BI;AA4BLC,EAAAA,SA5BK,uBA4BO;AACR,SAAKT,IAAL,CAAUU,GAAV,CAAcnB,EAAE,CAACK,IAAH,CAAQQ,SAAR,CAAkBC,UAAhC,EAA4C,KAAKC,YAAjD,EAA+D,IAA/D;AACA,SAAKN,IAAL,CAAUU,GAAV,CAAcnB,EAAE,CAACK,IAAH,CAAQQ,SAAR,CAAkBG,SAAhC,EAA2C,KAAKC,WAAhD,EAA6D,IAA7D;AACH,GA/BI;AAiCLF,EAAAA,YAjCK,wBAiCQK,UAjCR,EAiCoB;AACjB,QAAIC,QAAQ,GAAGD,UAAU,CAACE,WAAX,EAAf;AACA,SAAKb,IAAL,CAAUC,QAAV,GAAqB,KAAKD,IAAL,CAAUc,MAAV,CAAiBC,oBAAjB,CAAsCH,QAAtC,CAArB;;AACA,QAAI,CAAC,KAAKI,aAAL,CAAmB,KAAKrB,QAAxB,EAAkCgB,UAAlC,CAAL,EAAoD;AAChD,WAAKX,IAAL,CAAUC,QAAV,GAAqB,KAAKH,OAA1B,CADgD,CACb;AACtC;AACR,GAvCI;AAyCLU,EAAAA,WAzCK,uBAyCOG,UAzCP,EAyCmB;AACpB,QAAI,KAAKd,QAAL,CAAcoB,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,aAD4B,CACpB;AACX;;AACD,QAAIC,MAAM,GAAG,KAAb;AACA,QAAIC,cAAc,GAAG,IAArB;;AACA,yDAAyB,KAAKtB,QAA9B,wCAAwC;AAAA,UAA7BuB,UAA6B;;AACpC,UAAI,KAAKJ,aAAL,CAAmBI,UAAnB,EAA+BT,UAA/B,CAAJ,EAAgD;AAC5CO,QAAAA,MAAM,GAAG,IAAT;AACAC,QAAAA,cAAc,GAAGC,UAAjB;AACA;AACH;AACJ,KAZmB,CAapB;;;AACA,QAAIF,MAAJ,EAAY;AACR;AACA,WAAKlB,IAAL,CAAUC,QAAV,GAAqBkB,cAAc,CAAClB,QAApC;AACA,WAAKH,OAAL,GAAe,KAAKE,IAAL,CAAUC,QAAzB;AACH,KAJD,MAIO;AACH;AACA,WAAKD,IAAL,CAAUC,QAAV,GAAqB,KAAKH,OAA1B,CAFG,CAEgC;AACtC;AAEJ,GAhEI;AAkEL;AACAkB,EAAAA,aAnEK,yBAmESI,UAnET,EAmEqBT,UAnErB,EAmEiC;AAClC,QAAIU,IAAI,GAAGD,UAAU,CAACE,cAAX,EAAX;AACA,QAAIV,QAAQ,GAAGD,UAAU,CAACE,WAAX,EAAf;AACA,QAAIU,KAAK,GAAGH,UAAU,CAACN,MAAX,CAAkBC,oBAAlB,CAAuCH,QAAvC,CAAZ;AACA,WAAOS,IAAI,CAACG,QAAL,CAAcD,KAAd,CAAP;AACH;AAxEI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        dropArea: cc.Node,\n        dropSlot: [cc.Node],\n        _oldPos: null // 上一个位置\n    },\n\n    // // 测试\n    // onLoad() {\n    //     this.node.position = this.dropSlot[getRandomInt(0, this.dropSlot.length)].position\n    //     function getRandomInt(min, max) {\n    //         min = Math.ceil(min);\n    //         max = Math.floor(max);\n    //         return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\n    //       }\n    // },\n\n    start() {\n        this._oldPos = this.node.position;\n    },\n\n    onEnable() {\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    },\n\n    onDisable() {\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);\n        this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);\n    },\n\n    _onTouchMove(touchEvent) {\n            let location = touchEvent.getLocation();\n            this.node.position = this.node.parent.convertToNodeSpaceAR(location);\n            if (!this._withinTarget(this.dropArea, touchEvent)) {\n                this.node.position = this._oldPos; // 回去\n            }\n    },\n\n    _onTouchEnd(touchEvent) {\n        if (this.dropSlot.length === 0) {\n            return; // 没有目标位置\n        }\n        let inSlot = false;\n        let thisTargetNode = null\n        for (const targetNode of this.dropSlot) {\n            if (this._withinTarget(targetNode, touchEvent)) {\n                inSlot = true;\n                thisTargetNode = targetNode;\n                break;\n            }\n        }\n        // 松开若在插槽附近则进插槽\n        if (inSlot) {\n            // 将prefabe位置定位插槽中心点, 保持prefabe与插槽保持同级\n            this.node.position = thisTargetNode.position\n            this._oldPos = this.node.position;\n        } else {\n            // 若未在插槽则回去\n            this.node.position = this._oldPos; // 回去\n        }\n\n    },\n\n    // 判断触摸事件是否在槽位里\n    _withinTarget(targetNode, touchEvent) {\n        let rect = targetNode.getBoundingBox();\n        let location = touchEvent.getLocation();\n        let point = targetNode.parent.convertToNodeSpaceAR(location);\n        return rect.contains(point);\n    }\n});\n"]}